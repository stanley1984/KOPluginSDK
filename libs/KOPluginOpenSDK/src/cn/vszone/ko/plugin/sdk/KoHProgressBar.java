package cn.vszone.ko.plugin.sdk;import android.content.Context;import android.util.AttributeSet;import android.view.LayoutInflater;import android.view.ViewGroup;import android.widget.LinearLayout;public class KoHProgressBar extends LinearLayout {    // ===========================================================    // Constants    // +==========================================================    // -==========================================================    // ===========================================================    // Fields    // +==========================================================    private int                 mWidth;    private float               mProgress;    private float               mMax;    private LinearLayout        mProgressLyt;        private boolean             isInit = false;     // -==========================================================    // ===========================================================    // Constructors    // +==========================================================    public KoHProgressBar(Context context) {        super(context);        initView(context, null, 0);    }    public KoHProgressBar(Context context, AttributeSet attrs) {        super(context, attrs);        initView(context, attrs, 0);    }    public KoHProgressBar(Context context, AttributeSet attrs, int defStyleAttr) {        super(context, attrs, defStyleAttr);        initView(context, attrs, defStyleAttr);    }    // -==========================================================    // ===========================================================    // Getter & Setter    // +==========================================================    public void setProgress(float pProgress) {        pProgress = (pProgress > mMax) ? mMax : pProgress;        pProgress = (pProgress < 0) ? 0 : pProgress;        this.mProgress = pProgress;        float ratio = 0;        if (pProgress != 0) {            ratio = mMax / pProgress;        }        updateProgressStatus(ratio);    }        public void setProgressBackground(int BgResId){        mProgressLyt.setBackgroundResource(BgResId);    }    public float getProgress() {        return mProgress;    }    // -==========================================================    // ===========================================================    // Methods for/from SuperClass/Interfaces    // +==========================================================    @Override    protected void onLayout(boolean changed, int l, int t, int r, int b) {        super.onLayout(changed, l, t, r, b);        if (!isInit) {        	mWidth = getWidth();        	updateProgressStatus(0);            // updateSecondProgressStatus(0);            isInit = true;        }    }    // -==========================================================    // ===========================================================    // Methods    // +==========================================================    private void initView(Context context, AttributeSet attrs, int defStyleAttr) {        LayoutInflater.from(context).inflate(R.layout.ko_h_progressbar, this);        mProgressLyt = (LinearLayout) findViewById(R.id.h_progressbar_lyt_progress);        mMax = 100;        mWidth = getWidth();    }    private void updateProgressStatus(float ratio) {    	if(mWidth<=0){    		mWidth=getWidth();    	}        ViewGroup.LayoutParams params = mProgressLyt.getLayoutParams();        if (ratio > 0) {            params.width = (int) (mWidth / ratio);        } else {            params.width = 0;        }        mProgressLyt.setLayoutParams(params);    }    // -==========================================================    // ===========================================================    // Inner and Anonymous Classes    // +==========================================================    // -==========================================================}